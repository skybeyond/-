
长连接主要用于在少数客户端与服务端的频繁通信，因为这时候如果用短连接频繁通信常会发生Socket出错，并且频繁创建Socket连接也是对资源的浪费。
1、在频繁的与数据库服务通信，并且又非高并发的情况下，使用长连接更合适；
2、太多持久连接，大部分是sleep状态的，或者系统是高并发的，使用短连接更合适。


centos7 安装mysql：
1.卸载mariadb  rpm -qa | grep maria* ->  yum -y remove mariadb-libs.x86_64
2.获取mysql的rpm包： wget https://repo.mysql.com//mysql57-community-release-el7-11.noarch.rpm
3.安装rpm包：rpm -ivh mysql57-community-release-el7-11.noarch.rpm
4.安装mysql：yum install mysql-server
5.登录 mysql -u root -p
6.报错解决：ERROR 2002 (HY000): Can't connect to local MySQL server through socket '/var/lib/mysql/mysql.sock' (2)
  权限问题： chown root /var/lib/mysql/
7.错误：ERROR 1045 (28000): Access denied for user 'root'@'localhost' (using password: YES)  
  1、修改 /etc/my.cnf，在 [mysqld] 小节下添加一行：skip-grant-tables=1

    这一行配置让 mysqld 启动时不对密码进行验证

  2、重启 mysqld 服务：systemctl restart mysqld

  3、使用 root 用户登录到 mysql：mysql -u root 

  4、切换到mysql数据库，更新 user 表：

  update user set authentication_string = password('root'), password_expired = 'N', password_last_changed = now() where user = 'root';

  在之前的版本中，密码字段的字段名是 password，5.7版本改为了 authentication_string

  5、退出 mysql，编辑 /etc/my.cnf 文件，删除 skip-grant-tables=1 的内容

  6、重启 mysqld 服务，再用新密码登录即可
  MySQL 5.7 在初始安装后（CentOS7 操作系统）会生成随机初始密码，并在 /var/log/mysqld.log 中有记录，可以通过 cat 命令查看，找 password 关键字
  找到密码后，在本机以初始密码登录，并且（也只能）通过 alter user 'root'@'localhost' identified by '密码' 命令，修改 root 用户的密码为 root，然后退出，重新以root用户和刚设置的密码进行登录即可。
具体安装：https://blog.csdn.net/a774630093/article/details/79270080


liunx下mysql的一些基本操作：
授权：
grant all on *.* to 'root'@'%' identified by '123456' with grant option; //允许账户root从任何主机连接到所有数据库（*.*）;
grant all on test.* to 'user'@'%' identified by '123456' with grant option; //允许账户user从任何主机连接到test数据库

释放远程授权：
revoke all on *.* from 'user'@'%'; //禁止用户user从任何主机访问所有数据库
revoke all on test.* from 'user'@'%'; //禁止用户user从任何主机访问test数据库

flush privileges; //刷新系统授权表


基本命令：
show databases; //显示数据库
create database test;//创建数据库
use test; //选择数据库
drop database test //删除数据库 不在提醒
show tables；//显示表
describe tablename; //显示具体的表结构

select version(),current_date; //显示当前mysql的版本号和当前日期

select user(); //显示用户

create user 'jinwei'@'localhost' identified by '123'; //创建一个用户
